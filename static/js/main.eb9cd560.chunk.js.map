{"version":3,"sources":["constants.js","components/home.js","components/movies.js","components/cast.js","components/notFound.js","container/App.js","index.js"],"names":["TmdbApiKey","Home","useState","popularMovies","setPopularMovies","trendingMovies","setTrending","useEffect","trendingArray","popularArray","trendingObj","popularObj","fetch","then","response","json","res","results","map","movie","orig_title","name","original_title","rel_date","first_air_date","release_date","id","title","date","poster","poster_path","push","trendinglistItems","trendingMovie","className","to","pathname","replace","src","width","height","popularlistItems","popularMovie","length","Movies","props","movieId","useParams","setMovie","casts","setCast","movieObjWithOverview","status","window","location","href","overview","cast","castItems","profile_path","Cast","castId","castObj","person","setDetails","movies","console","log","biography","pic","known_for","known_for_department","birthday","also_known_as","movieItems","character","notFound","App","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eb9cd560.chunk.js","sourcesContent":["export const TracktApiKey = \"e51e26eee57ea109e331c7e3b83f2cb1ef1b23b3f779b5c13e27650c58986ba5\"\r\nexport const TmdbApiKey = \"60cb32143a1544b4fd527821e7a40966\"","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TmdbApiKey } from '../constants'\r\n\r\nconst Home = () => {\r\n  const [popularMovies, setPopularMovies] = useState([]);\r\n  const [trendingMovies, setTrending] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Trending Movies\r\n    let trendingArray = []\r\n    let popularArray = []\r\n    let trendingObj = {}\r\n    let popularObj = {}\r\n\r\n    fetch('https://api.themoviedb.org/3/trending/all/day?api_key=' + TmdbApiKey)\r\n      .then(response => response.json())\r\n      .then((res) => {\r\n        res.results && res.results.map((movie) => {\r\n          let orig_title = movie.name ? movie.name : movie.original_title;\r\n          let rel_date = movie.first_air_date ? movie.first_air_date : movie.release_date;\r\n          trendingObj = { id: movie.id, title: orig_title, date: rel_date, poster: movie.poster_path }\r\n          trendingArray.push(trendingObj)\r\n        })\r\n        setTrending(trendingArray)\r\n      })\r\n\r\n    //Popular Movies \r\n\r\n    fetch('https://api.themoviedb.org/3/movie/popular?api_key=' + TmdbApiKey + '&language=en-US&page=1')\r\n      .then(response => response.json())\r\n      .then((res) => {\r\n        res.results && res.results.map((movie) => {\r\n          let orig_title = movie.name ? movie.name : movie.original_title;\r\n          let rel_date = movie.first_air_date ? movie.first_air_date : movie.release_date;\r\n          popularObj = { id: movie.id, title: orig_title, date: rel_date, poster: movie.poster_path }\r\n          popularArray.push(popularObj)\r\n        })\r\n        setPopularMovies(popularArray)\r\n      })\r\n\r\n  }, []);\r\n\r\n  const trendinglistItems = trendingMovies.map((trendingMovie) =>\r\n    <div className=\"card\" key={trendingMovie.id}>\r\n      <Link className=\"header\" to={{ pathname: '/movies/' + trendingMovie.id + '-' + (trendingMovie.title).replace(/ /g, '-') }}>\r\n        <img src={`http://image.tmdb.org/t/p/w185/${trendingMovie.poster}`} width=\"130px\" height=\"185px\"></img>\r\n        <div>{trendingMovie.title}</div>\r\n        <div>{trendingMovie.date}</div>\r\n      </Link>\r\n    </div>\r\n  )\r\n  const popularlistItems = popularMovies.map((popularMovie) =>\r\n    <div className=\"card\" key={popularMovie.id}>\r\n      <Link className=\"header\" to={{ pathname: '/movies' + popularMovie.id }}>\r\n        <img src={`http://image.tmdb.org/t/p/w185/${popularMovie.poster}`} width=\"130px\" height=\"185px\"></img>\r\n        <div>{popularMovie.title}</div>\r\n        <div>{popularMovie.date}</div>\r\n      </Link>\r\n    </div>\r\n  )\r\n\r\n  if (trendingMovies.length > 0 && popularMovies.length > 0) {\r\n    return (\r\n      <>\r\n        <div>\r\n          <div>\r\n            <b>TRENDING</b>\r\n            <div className=\"ui ten stackable cards\">\r\n              {trendinglistItems}\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <b>POPULAR</b>\r\n            <div className=\"ui ten stackable cards\">\r\n              {popularlistItems}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n  else {\r\n    return (\r\n      <div>Loading...</div>\r\n    );\r\n  }\r\n\r\n}\r\nexport default Home;","import React, { useState, useEffect } from 'react';\r\nimport { TmdbApiKey } from '../constants'\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nconst Movies = (props) => {\r\n\r\n    let { movieId } = useParams();\r\n\r\n    const [movie, setMovie] = useState({})\r\n    const [casts, setCast] = useState([])\r\n\r\n    let movieObjWithOverview = {}\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/movie/' + movieId + '?api_key=' + TmdbApiKey)\r\n            .then(response => {\r\n                if (response.status != \"404\") {\r\n                    return response.json()\r\n                }\r\n                else {\r\n                    window.location.href = \"http://localhost:3000/notFound\"\r\n                }\r\n\r\n            }\r\n            )\r\n            .then((res) => {\r\n                movieObjWithOverview = { title: res.title, overview: res.overview }\r\n                setMovie(movieObjWithOverview)\r\n            })\r\n\r\n        fetch('https://api.themoviedb.org/3/movie/' + movieId + '/credits?api_key=' + TmdbApiKey)\r\n            .then(response => response.json())\r\n            .then((res) => {\r\n                res.cast && setCast(res.cast)\r\n            })\r\n\r\n    }, []);\r\n\r\n    const castItems = casts.map((cast) =>\r\n        <div className=\"card\">\r\n            <Link className=\"header\" to={{ pathname: '/cast/' + cast.id }} >\r\n                {cast.profile_path ? <img src={`http://image.tmdb.org/t/p/w185/${cast.profile_path}`} width=\"130px\" height=\"185px\"></img>\r\n                    :\r\n                    <img src={`https://static.toiimg.com/thumb/msid-76729750,width-640,resizemode-4/76729750.jpg`} width=\"130px\" height=\"185px\"></img>\r\n                }\r\n\r\n                <div><h3>{cast.name}</h3></div>\r\n            </Link>\r\n        </div>)\r\n\r\n    if (movie.overview) {\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <Link className=\"header\" to={{ pathname: '/' }} >\r\n                        <b>Home</b>\r\n                    </Link>\r\n                </div>\r\n                <div>\r\n                    <span><b>TITLE:</b>  </span>\r\n                    <span> {movie.title} </span>\r\n                </div>\r\n                <div>\r\n                    <span><b>Movie Overview: </b> </span>\r\n                    <span> {movie.overview} </span>\r\n                </div>\r\n                <div>\r\n                    <span>Cast</span>\r\n                    <div className=\"ui ten stackable cards\">\r\n                        {castItems}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else {\r\n        return <div>The resource you requested could not be found. <br /> Please try other Movie</div>\r\n    }\r\n\r\n}\r\n\r\nexport default Movies;","import React, { useState, useEffect } from 'react';\r\nimport { TmdbApiKey } from '../constants'\r\nimport { useParams, Link } from 'react-router-dom';\r\n\r\nconst Cast = (props) => {\r\n    let { castId } = useParams();\r\n    let castObj = {};\r\n    const [person, setDetails] = useState({})\r\n    const [movies, setMovie] = useState([])\r\n\r\n    useEffect(() => {\r\n        fetch('https://api.themoviedb.org/3/person/' + castId + '?api_key=' + TmdbApiKey)\r\n            .then(response => response.json())\r\n            .then((res) => {\r\n                console.log(res.name)\r\n                castObj = { name: res.name, biography: res.biography, pic: res.profile_path, known_for: res.known_for_department, birthday: res.birthday, also_known_as: res.also_known_as }\r\n                setDetails(castObj)\r\n            })\r\n\r\n\r\n        fetch('https://api.themoviedb.org/3/person/' + castId + '/movie_credits?api_key=' + TmdbApiKey)\r\n            .then(response => response.json())\r\n            .then((res) => {\r\n                res.cast && setMovie(res.cast)\r\n            })\r\n\r\n    }, [])\r\n    const movieItems = movies.map((movie) =>\r\n        <div className=\"card\">\r\n            <Link className=\"header\" to={{ pathname: '/movies/' + movie.id }} >\r\n                {movie.poster_path ? <img src={`http://image.tmdb.org/t/p/w185/${movie.poster_path}`} width=\"130px\" height=\"185px\"></img>\r\n                    :\r\n                    <img src={`https://static.toiimg.com/thumb/msid-76729750,width-640,resizemode-4/76729750.jpg`} width=\"130px\" height=\"185px\"></img>\r\n                }\r\n\r\n                <div><h3>{movie.original_title}</h3></div>\r\n                <div><h3>{movie.character}</h3></div>\r\n            </Link>\r\n        </div>)\r\n    //\r\n    return (<div>\r\n        <div>\r\n            <Link className=\"header\" to={{ pathname: '/' }} >\r\n                <b>Home</b>\r\n            </Link>\r\n        </div>\r\n        <h1>{person.name}</h1>\r\n        {person.pic ?\r\n            <img src={`http://image.tmdb.org/t/p/w185//${person.pic}`} width=\"130px\" height=\"185px\"></img> :\r\n            <div>No Image Available</div>\r\n        }\r\n        <div />\r\n        <br></br>\r\n        <div>\r\n            <h2>Personal Info</h2>\r\n            <h3>Known For</h3>\r\n            {person.known_for}\r\n            <h3>Birthday</h3>\r\n            {person.birthday}\r\n            <h3>Also Known As\r\n         </h3>{person.also_known_as}\r\n        </div>\r\n\r\n        <h3>Biography</h3>\r\n        <p>\r\n            {person.biography}\r\n        </p>\r\n        <div>\r\n            <span>Cast</span>\r\n            <div className=\"ui ten stackable cards\">\r\n                {movieItems}\r\n            </div>\r\n        </div>\r\n\r\n    </div>)\r\n}\r\n\r\n\r\nexport default Cast;\r\n","import React from 'react';\r\n\r\nconst notFound = () => {\r\n    \r\n    return (<div>    \r\n        <img src={`https://user-images.githubusercontent.com/2254197/34040502-05875a5c-e1ba-11e7-9cb0-b85b0e375d2f.png`}></img>  \r\n    </div>)\r\n}\r\n\r\n\r\nexport default notFound;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from '../components/home';\r\nimport Movies from '../components/movies';\r\nimport Cast from '../components/cast';\r\nimport NotFound from '../components/notFound'\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/movies/:movieId\">\r\n            <Movies />\r\n          </Route>\r\n        </Switch>\r\n        <Route path=\"/cast/:castId\">\r\n          <Cast />\r\n        </Route>\r\n        <Route path=\"/notFound\">\r\n          <NotFound />\r\n        </Route>\r\n      </Router>\r\n    </>\r\n  )\r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './container/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}